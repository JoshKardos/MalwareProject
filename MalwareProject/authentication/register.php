
<?php
session_start();
require_once 'mysql_parameter.php';

// connect to database
$db = mysqli_connect($hn, $un, $pw, $db, $port);

$min = 4;
$max = 100;
if ($db->connect_error) die($db->connect_error);
if (isset($_POST['register_btn'])) {

	$role = mysql_entities_fix_string($db, $_POST['role']);

	$username = mysql_entities_fix_string($db, $_POST['username']);

    $email = mysql_entities_fix_string($db, $_POST['email']);
    $password = mysql_entities_fix_string($db, $_POST['password']);
	$password2 = mysql_entities_fix_string($db, $_POST['password2']);

	if ($password == $password2 && $password != ""
		&& preg_match('/^(?=.*\d)(?=.*[A-Za-z])[0-9A-Za-z!@#$%]{4,100}$/', $_POST["password"])
		&& preg_match('/^[A-Za-z0-9-_]{4,100}$/', $_POST["username"])
		) {
		// create user
		if($role == 'user'){
			$token = hash('ripemd128', "$salt1$password$salt2");

			$sql = "INSERT INTO users(username, email, password) VALUES('$username', '$email', '$token')";
			$result = mysqli_query($db, $sql);

			if (!$result)
			{
				$str = "Signup failed.<br>" . $db->error . "<br><br>";
				$_SESSION['message'] = "$str";
				header("location: register.php");
				exit;
			}
			else{
				$str = "Signup done.<br>" . $db->error . "<br><br>";
				$_SESSION['message'] = "$str";
				header("location: register.php");
				exit;
			}

			$result->close();

		} elseif ($role == 'contributor') {
			$token = hash('ripemd128', "$salt1$password$salt2");

			$sql = "INSERT INTO contributors (username, email, password) VALUES('$username', '$email', '$token')";
			$result = mysqli_query($db, $sql);
			if (!$result)
			{
				$str = "Signup failed.<br>" . $db->error . "<br><br>";
				$_SESSION['message'] = "$str";
				header("location: register.php");
				exit;
			}
			else{
				$str = "Signup done.<br>" . $db->error . "<br><br>";
				$_SESSION['message'] = "$str";
				header("location: register.php");
				exit;
			}

			$result->close();
		}

    } elseif(empty($username) || empty($email) || empty($password) || empty($password2)){
        
        $_SESSION['message'] = "There is an empty field!";
        
	} else{
        // failed
		$_SESSION['message'] = "Please make sure enter the same passwords, a valid username, a valid password, and a valid length of password and username.";
    }
}

	echo <<<_END
		<!DOCTYPE html>
		<html>
		<head>
		<title>Online Virus Check</title>
		<link rel="stylesheet" type="text/css" href="style.css">
		<script>
			function validate(form) {
				fail += validateUsername(form.username.value)
				fail += validatePassword(form.password.value)
				fail += validateAge(form.age.value)
				fail += validateEmail(form.email.value)
				
				if (fail == "") return true
				else { alert(fail); return false }
			}

			function validateUsername(field)
			{
				if (field == "") return "No Username was entered.\n"
				else if (field.length < $min)
					return "Usernames must be at least $min characters.\n"
				else if (/[^a-zA-Z0-9_-]/.test(field))
					return "Only a-z, A-Z, 0-9, - and _ allowed in Usernames.\n"
				return ""
			}

			function validateEmail(field)
			{
				if (field == "") return "No Email was entered.\n"
				Console.log("I was here")
				else if (!((field.indexOf(".") > 0) && (field.indexOf("@") > 0)) || /[^a-zA-Z0-9.@_-]/.test(field))
					return "The Email address is invalid.\n"
				return ""
			}

			function validatePassword(field)
			{
				if (field == "") return "No Password was entered.\n"
				else if (field.length < $min)
					return "Passwords must be at least $min characters.\n"
				else if (!/[a-z]/.test(field) || !/[A-Z]/.test(field) ||!/[0-9]/.test(field) ||!/[!@#$%]/.test(field))
					return "Passwords require one each of a-z, A-Z and 0-9.\n"
				return ""
			}
		</script>
	
		</head>
		<body>
			<div class="header">
				<h1>Online Virus Check</h1>
			</div>
_END;


	if (isset($_SESSION['message'])) {
		echo "<div id='error_msg'>" . $_SESSION['message'] . "</div>";
		unset($_SESSION['message']);
	}

	echo <<<_END
		<form method="post" action="register.php" onsubmit="return validate(this)">
			<table>
				<tr>
					role: <select id="role" name="role">                      
						<option selected="selected" value="user">User</option>
						<option value="contributor">Contributor</option>
					</select>
				</tr>
				<tr>
					<td>Username:</td>
					<td><input type="text" maxlength="100" name="username" class="textInput"></td>
				</tr>

				<tr>
					<td></td>
					<td>
						Please enter English letters (capitalized or not), digits, and the characters '_' (underscore) and '-' (dash). Nothing else. Also the minimun number of characters is 4.
					</td>
				</tr>

				<tr>
					<td>Email:</td>
					<td><input type="email" maxlength="100" name="email" class="textInput"></td>
				</tr>

				<tr>
					<td>Password:</td>
					<td><input type="password" maxlength="100" name="password" class="textInput"></td>
				</tr>

				<tr>
					<td></td>
					<td>
						Please use characters of "A-Z", "a-z", "0-9", or "!@#$%" to create your password. The length of password is from 4 to 100 characters. The password must be at least one letter and at least one number.
					</td>
				</tr>

				<tr>
					<td>Re-enter password:</td>
					<td><input type="password" name="password2" class="textInput"></td>
				</tr>

				<tr>
					<td><a href="login.php">Log In</a></td>
					<td><input type="submit" name="register_btn" value="Signup"></td>
				</tr>

			</table>
		</form>



	</body>
	</html>
_END;

	function mysql_entities_fix_string($conn, $string)
	{
		return htmlentities(mysql_fix_string($conn, $string));
	}

	function mysql_fix_string($conn, $string)
	{
		if (get_magic_quotes_gpc()) $string = stripslashes($string);
		return $conn->real_escape_string($string);
	}
?>